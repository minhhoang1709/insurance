buildscript {
	ext {
		springBootVersion = '1.5.8.RELEASE'
	}
	repositories {
		mavenCentral()
		maven { url 'http://repo.spring.io/plugins-release' }		
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("io.spring.gradle:propdeps-plugin:0.0.9.RELEASE")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'propdeps'
apply plugin: 'propdeps-eclipse'
apply plugin: 'war'

group = 'com.ninelives'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url 'http://repo.spring.io/plugins-release' }
	maven { url 'http://jcenter.bintray.com' }
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-activemq')
	compile('org.springframework.boot:spring-boot-starter-jersey')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-data-redis')
	compile('org.springframework.boot:spring-boot-starter-jdbc')
	compile('org.springframework.boot:spring-boot-starter-cache')
	
	//mybatis
	compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.1')	
	
	//redis	
	//compile('redis.clients:jedis:2.9.0')
	
	//ehcache	
	compile('net.sf.ehcache:ehcache:2.10.4')
	
	//json
	compile('com.google.code.gson:gson:2.8.2')
	
	//jackson, javatime
	compile('com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.2')
	
	//common
	compile('commons-codec:commons-codec:1.11')
	compile('org.apache.commons:commons-collections4:4.1')	
	compile('commons-io:commons-io:2.6')
	
	//payment midtrans
	compile('id.co.veritrans:vt-java-client:1.5.0')	
		
	runtime('org.postgresql:postgresql')
	providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
	
	testCompile('org.springframework.boot:spring-boot-starter-test')
	
	optional('org.springframework.boot:spring-boot-configuration-processor')
}

compileJava.dependsOn(processResources)

war {   
   	from('src/main/java') {
		include '**/*.xml'
		into 'WEB-INF/classes'
   	}
}

bootRun {
    systemProperties = System.properties
}

//test {
	//testLogging.showStandardStreams = true
//}